import html

from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardButton
from aiogram.enums import ChatType
from aiogram.utils.keyboard import InlineKeyboardBuilder
from bot.other.replies import LINK_BOT, BEER_UNIT
from bot.db_async import update_count_drink
import aiogram.utils.markdown as mk
from sqlalchemy.ext.asyncio import AsyncSession
from bot.db_async import User, Chat, update_drink

router = Router()


@router.message(Command('drink'), F.chat.type == ChatType.PRIVATE)
async def cmd_drink(message: Message):
    text = mk.text(mk.hbold('–ö–æ–º–∞–Ω–¥–∞ /drink'), "–¥–æ—Å—Ç—É–ø–Ω–∞ –≤–µ–∑–¥–µ –∫—Ä–æ–º–µ –ª—Å –±–æ—Ç–∞üç∫")
    await message.answer(text, parse_mode='HTML')
    return


@router.message(Command('drink'), F.chat.type != ChatType.PRIVATE)
async def cmd_drink(message: Message, session: AsyncSession,
                    user: User, chat: Chat):
    result, list_gamer, update_count = await update_drink(session, user, chat)
    position = [i[0].user_id for i in list_gamer].index(user.id) + 1 #–í—ã—á–∏—Å–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –∏–≥—Ä–æ–∫–∞
    text_link = mk.hlink(user.name, f"https://t.me/{user.link}") if user.link != 'unknown' else mk.html_decoration.quote(user.name)
    if update_count:
        text_doing = mk.hbold('–í–´–ë–£–•–ê–õ')
        if update_count < 0:
            text_doing = mk.hbold('–í–´–ë–õ–ï–í–ê–õ')
        text = mk.text(
            f"üëª{text_link}, —Å–µ–≥–æ–¥–Ω—è —Ç—ã {text_doing} | {mk.hbold(update_count)} {BEER_UNIT}\n",
            f"–¢–µ–ø–µ—Ä—å —Ç–≤–æ–π –ü–ò–í–∑–∞–ø–∞—Å {mk.hbold(round(result.count,1))} {BEER_UNIT}",
            f"üíÄ–¢—ã –∑–∞–Ω–∏–º–∞–µ—à—å {mk.hbold(position)} –º–µ—Å—Ç–æ",
            "–°–ª–µ–¥—É—é—â–∞—è –ø–æ–ø—ã—Ç–∫–∞ –∑–∞–≤—Ç—Ä–∞!",mk.hlink("–ö—Ä—É—Ç–∏ –∫–∞–∫–∞—à–∫–∏üí©", "https://t.me/boinker_bot/boinkapp?startapp=boink965898224"),mk.hlink("–ö–∏–¥–∞–π –º–æ–Ω–µ—Ç–∫—Éü™ô", "https://t.me/CoinFlipGame_bot/DOXCoinFlip?startapp=965898224"),
            sep='\n')
        return await message.answer(text, parse_mode='HTML', disable_web_page_preview=True)
    text = mk.text(
        f"üëª{text_link}, —Ç—ã —É–∂–µ –ø–∏–ª —Å–µ–≥–æ–¥–Ω—è\n",
        f"–¢–≤–æ–π –∑–∞–ø–∞—Å: {mk.hbold(round(result.count,1))} {BEER_UNIT}",
        f"üíÄ–í –º–µ—Å—Ç–Ω–æ–º —Ç–æ–ø—á–∏–∫–µ —Ç—ã –Ω–∞ {mk.hbold(position)} –º–µ—Å—Ç–µ",
        "–°–ª–µ–¥—É—é—â–∞—è –ø–æ–ø—ã—Ç–∫–∞ –∑–∞–≤—Ç—Ä–∞!",mk.hlink("–ö—Ä—É—Ç–∏ –∫–∞–∫–∞—à–∫–∏üí©", "https://t.me/boinker_bot/boinkapp?startapp=boink965898224"),mk.hlink("–ö–∏–¥–∞–π –º–æ–Ω–µ—Ç–∫—Éü™ô", "https://t.me/CoinFlipGame_bot/DOXCoinFlip?startapp=965898224"),
        sep='\n')
    return await message.answer(text, parse_mode='HTML', disable_web_page_preview=True)


